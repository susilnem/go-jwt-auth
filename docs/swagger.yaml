basePath: /api
definitions:
  controller.AuthenticationInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact:
    email: susiltiwari750@gmail.com
    name: For API Support
  description: This is a sample jwt authentication api
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Jwt Authentication API
  version: "1"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.AuthenticationInput'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Register
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.AuthenticationInput'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Register
      tags:
      - Authentication
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Per Page
        in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get Users
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get User
      tags:
      - Users
  /users/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete User
      tags:
      - Users
  /users/{id}/update:
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.AuthenticationInput'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update User
      tags:
      - Users
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
